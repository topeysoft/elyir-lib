author: TopeySoft Computers <admin@topeysoft.com>
description: Shared library for TopeySoft's Elyir Home Automation
type: lib
version: 1.0
manifest_version: 2017-09-29
sources:
  - src
includes:
  - include

# List of dirs. Files from these dirs will be copied to the device filesystem
filesystem:
  - fs

config_schema:
  - ["device.id", "ELYIR??????"]
  - ["device.type", "s", "generic", {title: "Device type eg. switch"}]
  - ["device.display_name", "s", "Generic", {title: "Device friendly name eg. Toggle switch"}]
  - ["device.default_state", "s", "", {title: "Device default state when started"}]
  - ["device.saved_state", "s", "", {title: "Device saved state when started"}]
  - ["device.initial_config_completed", "b", false, {title: "Flag to indicate that user has completed initial setup"}]
  - ["device.bt_factory_reset_time", "i", 6000, {title: "Device factory reset button hold time"}]
  - ["device.wifi_fail_time", "i", 60000, {title: "Wait time until AP is active if STA is configured but not connected"}]
  - ["device.schedules", "s", "[]", {title: "Schedule this device to be at specific states at specific time"}]
  - ["device.ota_url", "s", "", {title: "Custom OTA URL"}]
  # - ["device.location.lat", 53.3242381]
  # - ["device.location.lon", -6.385785]

 
  - ["pins", "o", {title: "Pins layout"}]
  - ["pins.led", "i", -1, {title: "LED GPIO pin"}]
  - ["pins.button", "i", -1, {title: "Button GPIO pin"}]
  
  - ["owner", "o", {title: "Device owner"}]
  - ["owner.uid", "s", "topeysoft", {title: "Owners Unique Identifier"}]

  - ["wifi.ap.enable",  true]
  - ["wifi.ap.ssid", "Elyir.device.??????"]
  - ["wifi.ap.pass", "elyir678"]
  
  # - ["wifi.sta.enable", true]
  # - ["wifi.sta.ssid", "VirusBroadcast"]
  # - ["wifi.sta.pass", "6185810376"]

  - ["mqtt.enable",  true]
  - ["mqtt.keep_alive",  60]
  - ["mqtt.server",  "mqtt.elyir.com:8884"]

  - ["mqtt.status_interval", "i", 180000, {title: "Status publish interval"}] # 180000=3min
  - ["mqtt.base", "s", "users/%s/devices/%s/", {title: "Base topic"}]
  - ["mqtt.broadcast", "s", "broadcast", {title: "Broadcast topic"}]
  - ["mqtt.topic_state", "s", "state", {title: "Topic to which device state is published"}]
  - ["mqtt.topic_state_get", "s", "state/get", {title: "Topic to request current state"}]
  - ["mqtt.topic_state_set", "s", "state/set", {title: "Topic to set device state"}]
  - ["mqtt.topic_cron_api_set", "s", "cron/set", {title: "Topic to manage crontab data"}]
  - ["mqtt.topic_cron_api_get", "s", "cron", {title: "Topic to get crontab data"}]
  - ["mqtt.topic_ota_api_set", "s", "ota/set", {title: "Topic to manage OTA URL, etc."}]
  - ["mqtt.topic_ota_api_get", "s", "ota", {title: "Topic to manage OTA URL, etc."}]
  - ["mqtt.topic_info", "s", "info", {title: "Info topic"}]
  - ["mqtt.topic_info_get", "s", "info/get", {title: "Info request topic"}]
  - ["mqtt.will_topic", "s", "info", {title: "Info request topic"}]
  - ["mqtt.will_message", "s", "{\"connected\":false}", {title: "Info request topic"}]

  # - ["gcp.enable",false]
  # - ["gcp.project", "elyir-home-automation"]
  # - ["gcp.region", "us-central1"]
  # - ["gcp.registry", "elyir-devices-dev"]
  # - ["gcp.key", "rsa_private.pem"]
  # - ["gcp.device", "ELYIR??????" ]
  # - ["gcp.token_ttl", "i", 3600, {title: "Life time of the token"}]

conds:
  - when: mos.platform == "esp32"
    apply:
      config_schema:
        - ["pins.led", 13]
        - ["pins.button", 0]
  - when: mos.platform == "esp8266"
    apply:
      config_schema:
        - ["pins.led", 13]
        - ["pins.button", 0]
  - when: mos.platform == "cc3200"
    apply:
      config_schema:
        - ["pins.led", 64]
  - when: mos.platform == "cc3220"
    apply:
      config_schema:
        - ["pins.led", 64]
        - ["pins.button", 15]




build_vars:
  MGOS_WIFI_ENABLE_AP_STA: 1

cdefs:
  MGOS_WIFI_ENABLE_AP_STA: 1
  # MGOS_ENABLE_WEB_CONFIG: 0
  # MGOS_ENABLE_FILE_UPLOAD: 1
  # MGOS_ENABLE_TUNNEL: 0

libs:
  - origin: https://github.com/mongoose-os-libs/ca-bundle
  # - origin: https://github.com/mongoose-os-libs/gcp
  - origin: https://github.com/mongoose-os-libs/http-server
  - origin: https://github.com/mongoose-os-libs/ota-http-server
  - origin: https://github.com/mongoose-os-libs/ota-http-client
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-common
  - origin: https://github.com/mongoose-os-libs/rpc-service-ota
  # - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/wifi
  - origin: https://github.com/mongoose-os-libs/mqtt
  - origin: https://github.com/mongoose-os-libs/pwm
  - origin: https://github.com/mongoose-os-libs/arduino-compat
  # - origin: https://github.com/mongoose-os-libs/cron
  # - origin: https://github.com/mongoose-os-libs/jstore
  - origin: https://github.com/mongoose-os-libs/rpc-service-cron
  - origin: https://github.com/mongoose-os-libs/location
  
tags:
  - http
  - c
  - net
